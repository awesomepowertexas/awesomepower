name: Run Tests

on:
  - push

env:
  DATABASE_URL: mysql://user:password@localhost:3306/awesomepower
  NODE_ENV: production

jobs:
  component:
    name: Cypress component tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.26.1
          run_install: true
        env:
          NODE_ENV: development

      - name: Cypress component tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          command: pnpm cypress run-ct

      - name: Upload to Codecov
        if: ${{ always() }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          fail_ci_if_error: true

  e2e:
    name: Cypress end-to-end tests
    runs-on: ubuntu-latest

    strategy:
      # https://github.com/cypress-io/github-action#parallel
      fail-fast: false
      matrix:
        containers: [1, 2]

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: awesomepower
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v2

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.26.1
          run_install: true
        env:
          NODE_ENV: development

      - name: Cypress end-to-end tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          build: pnpm build
          start: pnpm start
          wait-on: http://localhost:3000
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Codecov
        if: ${{ always() }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          fail_ci_if_error: true
